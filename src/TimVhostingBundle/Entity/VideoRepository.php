<?php

namespace TimVhostingBundle\Entity;

/**
 * VideoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VideoRepository extends \Doctrine\ORM\EntityRepository
{
    public function getList($isDeleted = false, $isPublic = true)
    {
        $qb = $this->createQueryBuilder('v');

        if (is_bool($isDeleted)) {
            $qb->andWhere('v.isDeleted != :isDeleted')
                ->setParameter('isDeleted', !$isDeleted);
        }

        if (is_bool($isPublic)) {
            $qb->andWhere('v.isPublic = :isPublic')
                ->setParameter('isPublic', $isPublic);
        }

        return $qb;
    }

    /**
     * @param bool $isDeleted
     * @param null $youtubeVideoId
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getVideosQuery($isDeleted = false, $youtubeVideoId = null)
    {
        $qb = $this->createQueryBuilder('v');

        if (is_bool($isDeleted)) {
            $qb->andWhere('v.isDeleted != :isDeleted')
                ->setParameter('isDeleted', !$isDeleted);
        }

        if (!is_null($youtubeVideoId)) {
            $qb->andWhere('v.youtubeVideoId = :youtubeVideoId')
                ->setParameter('youtubeVideoId', $youtubeVideoId);
        } else {
            $qb->andWhere('v.youtubeVideoId IS NOT NULL');
        }

        return $qb;
    }

    public function getVideoListCompareList($ids, $isDeleted = false)
    {
        $qb = $this->createQueryBuilder('v');

        if (is_bool($isDeleted)) {
            $qb->andWhere('v.isDeleted != :isDeleted')
                ->setParameter('isDeleted', !$isDeleted);
        }

        $qb->andWhere('v.youtubeVideoId IN (:ids)')
            ->setParameter('ids', $ids)
        ;

        return $qb;
    }
}
